public class QuickSort implements SortingAlgorithm {

	public void sort(int [] a) {
		quickSort(a, 0, (a.length - 1));
	}
		
	public void quickSort(int[] a, int top, int bottom) {
	
		int pivot = partition(a, top, bottom);
			
		if (top < pivot - 1) {
			quickSort(a, top, pivot - 1);
		}
		
		if (pivot < bottom) {
			quickSort(a, pivot, bottom);
		}	
	}
	
	public int partition(int[] a, int top, int bottom) {
	
		int i = top;
		int j = bottom;
		int pivot = (i + j)/2;
		
		while(i <= j) {
			while(a[i] < a[pivot]) {
				i++;
			}
			while(a[j] > a[pivot]) {
				j--;
			}
			if (i <= j) {
				if (i == pivot) {
					pivot = j;
				} else if (j == pivot) {
					pivot = i;
				}
				swap(a, i++, j--);
			}
		}
		return i;
	}
	
	public void swap(int[] arr, int i, int j) {
	
		int temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
	
	}
}
